name: Terraform Azure Deployment

on:
  workflow_dispatch:
    inputs:
      auto_apply:
        description: 'Automatically apply Terraform changes after planning'
        required: false
        default: 'false'

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.5

      # Step 3: Initialize Terraform
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./Terraform

      # Step 4: Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./Terraform
        env:
          TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_domeneshop_api_token: ${{ secrets.DOMENESHOP_API_TOKEN }}
          TF_VAR_domeneshop_api_secret: ${{ secrets.DOMENESHOP_API_SECRET }}

      # Step 5: Save .terraform directory and tfplan as artifacts
      - name: Upload Terraform Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: terraform-artifacts
          path: |
            ./Terraform/tfplan
            ./Terraform/.terraform
            ./Terraform/.terraform.lock.hcl

  terraform-apply:
    name: Terraform Apply
    needs: terraform-plan
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.5

      # Step 3: Download Terraform Artifacts
      - name: Download Terraform Artifacts
        uses: actions/download-artifact@v3
        with:
          name: terraform-artifacts

      # Step 4: Initialize Terraform
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./Terraform

      # Step 5: Check auto_apply input
      - name: Check Auto Apply
        run: |
          if [ "${{ github.event.inputs.auto_apply }}" == "false" ]; then
            echo "Auto apply is disabled. Please approve the workflow to continue."
            exit 0
          fi

      # Step 6: Terraform Apply
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./Terraform
        env:
          TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_domeneshop_api_token: ${{ secrets.DOMENESHOP_API_TOKEN }}
          TF_VAR_domeneshop_api_secret: ${{ secrets.DOMENESHOP_API_SECRET }}