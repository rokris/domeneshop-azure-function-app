name: Terraform Azure Deployment

on:
  workflow_dispatch: # Allows manual triggering of the workflow

    # Optional: Add inputs for manual triggering
    inputs:
      auto_apply:
        description: 'Automatically apply Terraform changes after planning'
        required: false
        default: 'false'

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.10.5 # Update to your preferred Terraform version

    # Step 3: Parse Azure Service Principal JSON
    - name: Parse Azure SP JSON
      id: parse-sp-json
      run: |
        echo "SP_JSON=$(echo '${{ secrets.AZURE_SP_JSON }}' | jq -c .)" >> $GITHUB_ENV
        echo "ARM_CLIENT_ID=$(echo $SP_JSON | jq -r '.clientId')" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=$(echo $SP_JSON | jq -r '.clientSecret')" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=$(echo $SP_JSON | jq -r '.subscriptionId')" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=$(echo $SP_JSON | jq -r '.tenantId')" >> $GITHUB_ENV

    # Step 4: Debug environment variables (optional, for troubleshooting)
    - name: Debug Environment Variables
      run: |
        echo "ARM_CLIENT_ID=$ARM_CLIENT_ID"
        echo "ARM_CLIENT_SECRET=[REDACTED]"
        echo "ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID"
        echo "ARM_TENANT_ID=$ARM_TENANT_ID"
      env:
        ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}

    # Step 5: Initialize Terraform
    - name: Initialize Terraform
      run: terraform init -upgrade
      working-directory: ./Terraform # Path to your Terraform directory

    # Step 6: Terraform Plan
    - name: Terraform Plan
      run: terraform plan -out=tfplan
      working-directory: ./Terraform
      env:
        TF_VAR_client_id: ${{ env.ARM_CLIENT_ID }}
        TF_VAR_client_secret: ${{ env.ARM_CLIENT_SECRET }}
        TF_VAR_subscription_id: ${{ env.ARM_SUBSCRIPTION_ID }}
        TF_VAR_tenant_id: ${{ env.ARM_TENANT_ID }}

    # Step 7: Terraform Apply
    - name: Terraform Apply
      if: github.event.inputs.auto_apply == 'true' || github.event.inputs.auto_apply == true
      run: terraform apply -auto-approve tfplan
      working-directory: ./Terraform
      env:
        TF_VAR_client_id: ${{ env.ARM_CLIENT_ID }}
        TF_VAR_client_secret: ${{ env.ARM_CLIENT_SECRET }}
        TF_VAR_subscription_id: ${{ env.ARM_SUBSCRIPTION_ID }}
        TF_VAR_tenant_id: ${{ env.ARM_TENANT_ID }}