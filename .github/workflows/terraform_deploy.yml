name: Terraform Azure Deployment with Local State Management

on:
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.5

      # Step 3: Download Previous State (if available)
      - name: Download Terraform State
        uses: actions/download-artifact@v3
        with:
          name: terraform-state
        continue-on-error: true # If no state file exists, continue without failing

      # Step 4: Initialize Terraform
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./Terraform

      # Step 5: Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./Terraform
        env:
          TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}

      # Step 6: Terraform Apply
      - name: Terraform Apply
        if: github.event.inputs.auto_apply == 'true'
        run: terraform apply -auto-approve tfplan
        working-directory: ./Terraform
        env:
          TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}

      # Step 7: Upload Terraform State
      - name: Upload Terraform State
        uses: actions/upload-artifact@v3
        with:
          name: terraform-state
          path: ./Terraform/terraform.tfstate